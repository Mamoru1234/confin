name: "Server CI"
on:
  push:
    paths:
      - "server/**/*"
      - ".github/workflows/server.yml"

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('./server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
        working-directory: ./server
      - run: npm run lint
        working-directory: ./server
      - run: npm run build
        working-directory: ./server

  Deploy:
    needs:
      - Build
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: oleksiygontarpersonal
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build image
        run: docker-compose build
        working-directory: ./server

      - name: Push image
        run: docker-compose push
        working-directory: ./server

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/tickets-server.pem
          chmod 600 ~/.ssh/tickets-server.pem
          cat >>~/.ssh/config <<END
          Host tickets-server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/tickets-server.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ec2-user
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_HOST: ec2-18-197-54-213.eu-central-1.compute.amazonaws.com

      - name: Pull image on server
        run: ssh tickets-server 'docker pull oleksiygontarpersonal/confin:server-0.0.0'

      - name: Apply change on server
        run: ssh tickets-server 'cd ~/confin && docker-compose up -d server'